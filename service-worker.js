"use strict";var precacheConfig=[["/Synapse-React-Client/index.html","21f6a0a4fa77a8bd6f78b535e9a4667f"],["/Synapse-React-Client/static/css/main.c3a5fdb3.css","8edc168974a8dd961188960c71efb60d"],["/Synapse-React-Client/static/media/DNA_Two.d8f80972.svg","d8f80972135030bbfd82241a16aa46fd"],["/Synapse-React-Client/static/media/Data2.1104e430.svg","1104e430b37f10f989089a81f19c9de7"],["/Synapse-React-Client/static/media/ModelAD-icon-header.d2e9fd8e.svg","d2e9fd8e59a5b3cbef83329b5cc841b6"],["/Synapse-React-Client/static/media/ModelAD-icon.e37944bf.svg","e37944bf917ec001562b501938f26a24"],["/Synapse-React-Client/static/media/Publication.b630024c.svg","b630024cfe015d9d2bf9b897b251b3cc"],["/Synapse-React-Client/static/media/amp-icon-header.71a5e101.svg","71a5e1012970114f42625df4d03b5f6c"],["/Synapse-React-Client/static/media/amp-icon.3593ecd7.svg","3593ecd790fa455f0dd7a75286fbd717"],["/Synapse-React-Client/static/media/close.18659820.svg","18659820f9e40aaabced52d9b5ac9a30"],["/Synapse-React-Client/static/media/controlledStudy.e5ba7234.svg","e5ba7234aa46f422a667a3545a642bfd"],["/Synapse-React-Client/static/media/ctf.4eb55044.svg","4eb550442e16b289274c4eb558248a93"],["/Synapse-React-Client/static/media/dhart.e554b25a.svg","e554b25a858844e5f9722bf4307975a6"],["/Synapse-React-Client/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/Synapse-React-Client/static/media/logo.c5907af2.svg","c5907af203b364d314935dbc7d00c12e"],["/Synapse-React-Client/static/media/move-icon-header.dd07eaeb.svg","dd07eaebae20662ef2fce13b28c31ad5"],["/Synapse-React-Client/static/media/move-icon.2f85f6de.svg","2f85f6de394851d919884a2b55041ece"],["/Synapse-React-Client/static/media/ntap.e9543055.svg","e95430551616352b0f290418e0161238"],["/Synapse-React-Client/static/media/project.28806f03.svg","28806f0375ec68aea6c5d2a80ddc761a"],["/Synapse-React-Client/static/media/resilience-icon-header.595fa5fa.svg","595fa5faf0330c7ab9210e5ee1cbecdd"],["/Synapse-React-Client/static/media/resilience-icon.b1a30ae3.svg","b1a30ae3497645baab50302dffea31c4"],["/Synapse-React-Client/static/media/selected.e7e4f92b.svg","e7e4f92bea68c59c91d8b1caff0b098c"],["/Synapse-React-Client/static/media/study-active.bc52e72b.svg","bc52e72be82449e98220e964df044c96"],["/Synapse-React-Client/static/media/study-complete.b012f80b.svg","b012f80b396b048881abcbfa63f2abd1"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var c="/Synapse-React-Client/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});